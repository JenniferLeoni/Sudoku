using System.Collections.Generic;
using UnityEngine;

public class Generator
{
    public static int[,] GeneratePuzzle(int level)
    {
        var grid = InitializeGrid(level);
        PrintGrid(grid);
        return grid;
    }

    public static void PrintGrid(int[,] grid)
    {
        string gridString = "Grid:\n";
        for (int row = grid.GetLength(0) - 1; row >= 0; row--)
        {
            for (int col = 0; col < grid.GetLength(1); col++)
            {
                gridString += grid[row, col] + " ";
            }
            gridString += "\n";
        }
        Debug.Log(gridString);
    }

    public static int[,] InitializeGrid(int gridNumber)
    {
        int[,] grid;
        switch (gridNumber)
        {
            case 1:
                grid = new int[,]
                {
                    {4,8,0,5,2,0,7,0,0},
                    {0,0,3,8,0,4,9,1,0},
                    {1,6,5,7,9,0,2,8,0},
                    {8,0,0,4,7,9,5,2,0},
                    {9,0,4,2,0,0,6,7,8},
                    {2,0,0,1,0,0,3,0,0},
                    {6,0,8,3,0,0,4,5,2},
                    {5,7,1,0,4,0,0,6,3},
                    {3,0,2,6,5,8,1,0,7}
                };
                break;
            case 2:
                grid = new int[,]
                {
                    {0,7,9,0,8,5,1,2,3},
                    {4,5,3,1,2,9,0,0,6},
                    {0,0,0,0,3,0,9,5,4},
                    {2,0,0,0,1,3,5,4,0},
                    {3,4,7,8,5,2,6,1,9},
                    {0,0,0,6,0,4,0,8,2},
                    {7,3,0,5,0,8,0,6,0},
                    {9,6,0,2,4,1,7,3,0},
                    {5,0,4,3,0,0,0,9,8}
                };
                break;
            case 3:
                grid = new int[,]
                {
                    {5,6,0,0,3,0,0,8,9},
                    {0,4,3,8,6,0,7,0,0},
                    {0,1,0,9,2,5,6,0,4},
                    {4,7,5,3,1,0,0,2,0},
                    {2,9,0,0,0,0,0,1,0},
                    {3,0,0,0,7,6,0,4,5},
                    {6,0,4,7,5,8,2,9,0},
                    {1,5,8,6,0,2,4,0,3},
                    {7,2,9,0,4,3,5,0,8}
                };
                break;
            case 4:
                grid = new int[,]
                {
                    {0,1,3,2,5,7,8,0,9},
                    {0,0,2,6,1,0,0,3,4},
                    {0,8,0,0,0,0,5,1,2},
                    {2,0,5,0,0,9,4,0,1},
                    {8,0,9,1,7,3,6,0,5},
                    {1,0,6,0,0,0,3,9,8},
                    {3,0,8,9,4,2,1,0,7},
                    {0,9,1,5,8,6,2,4,3},
                    {0,0,0,7,0,1,0,0,6}
                };
                break;
            case 5:
                grid = new int[,]
                {
                    {4,0,0,0,1,0,3,0,7},
                    {8,0,0,2,0,0,1,6,5},
                    {0,1,6,5,0,0,4,0,8},
                    {0,0,8,1,6,4,2,5,3},
                    {3,2,4,9,8,0,6,7,0},
                    {5,6,0,3,2,7,8,0,0},
                    {0,9,2,4,0,0,7,0,0},
                    {7,4,3,6,0,1,0,8,2},
                    {0,0,5,7,3,2,9,1,4}
                };
                break;
            case 6:
                grid = new int[,]
                {
                    {6,8,5,0,0,4,2,0,3},
                    {0,3,7,2,0,0,6,0,1},
                    {0,2,9,8,6,0,4,5,7},
                    {2,1,4,7,8,6,0,3,9},
                    {0,7,3,5,4,9,1,6,0},
                    {0,0,0,0,2,1,0,0,4},
                    {9,0,0,0,3,0,7,1,5},
                    {0,5,8,0,0,2,0,0,6},
                    {0,6,1,4,5,7,0,2,0}
                };
                break;
            case 7:
                grid = new int[,]
                {
                    {7,4,6,1,3,9,0,5,2},
                    {1,0,8,2,7,5,9,4,0},
                    {5,0,2,0,0,0,1,3,7},
                    {8,1,0,0,6,0,0,2,9},
                    {2,7,3,0,0,1,0,0,4},
                    {4,6,9,0,2,7,0,0,0},
                    {3,2,0,7,0,8,0,0,5},
                    {0,0,1,3,0,6,2,7,8},
                    {6,0,7,0,5,2,4,1,0}
                };
                break;
            case 8:
                grid = new int[,]
                {
                    {0,3,6,0,8,9,2,7,0},
                    {0,8,0,0,0,2,5,9,0},
                    {4,2,9,3,0,5,8,1,6},
                    {8,7,0,0,9,6,4,3,1},
                    {3,6,5,0,0,0,0,2,8},
                    {0,9,0,2,3,8,0,6,5},
                    {0,4,7,0,5,3,0,8,9},
                    {9,5,3,8,0,0,0,4,0},
                    {0,0,0,9,2,0,3,5,0}
                };
                break;
            case 9:
                grid = new int[,]
                {
                    {3,0,0,9,0,8,1,7,0},
                    {1,6,9,7,5,4,8,0,3},
                    {8,0,2,0,0,1,0,4,0},
                    {5,1,0,4,7,0,3,6,0},
                    {9,2,0,0,8,0,4,1,7},
                    {0,0,3,0,1,0,0,0,9},
                    {6,9,0,1,4,2,7,3,8},
                    {0,0,1,8,9,0,6,5,0},
                    {4,8,0,6,3,5,0,0,1}
                };
                break;
            case 10:
                grid = new int[,]
                {
                    {0,5,7,0,6,0,4,0,9},
                    {3,0,8,5,4,9,0,6,0},
                    {9,0,6,0,7,1,5,3,8},
                    {0,9,2,0,3,5,6,0,4},
                    {5,1,4,7,9,0,2,8,3},
                    {0,6,0,4,0,2,0,7,5},
                    {0,0,5,0,8,0,0,9,2},
                    {4,0,0,0,2,7,3,5,6},
                    {0,0,9,0,0,3,8,0,1}
                };
                break;
            case 11:
                grid = new int[,]
                {
                    {7,5,6,3,2,8,4,9,1},
                    {0,1,8,9,5,4,6,2,0},
                    {0,9,2,1,6,7,5,8,3},
                    {0,8,0,5,3,6,0,0,9},
                    {5,3,9,2,0,1,0,0,0},
                    {1,0,4,8,0,9,2,3,0},
                    {0,0,5,4,0,2,0,0,0},
                    {9,0,0,6,0,3,0,5,2},
                    {8,0,3,7,1,5,9,0,4}
                };
                break;
            case 12:
                grid = new int[,]
                {
                    {5,6,9,7,2,1,8,3,4},
                    {1,7,0,4,5,0,6,0,2},
                    {4,2,3,0,6,0,1,7,0},
                    {9,4,2,0,0,5,0,1,0},
                    {0,5,0,3,7,0,0,0,0},
                    {0,0,0,0,4,2,5,0,0},
                    {7,8,0,2,0,6,0,4,1},
                    {2,1,4,5,0,7,9,6,8},
                    {3,9,0,8,1,4,0,5,7}
                };
                break;
            case 13:
                grid = new int[,]
                {
                    {9,0,0,7,8,0,6,2,0},
                    {0,0,4,2,1,9,3,7,5},
                    {7,1,2,6,5,0,4,8,0},
                    {1,0,0,0,9,0,8,6,4},
                    {8,3,6,0,0,1,0,9,2},
                    {4,0,9,5,6,0,7,0,3},
                    {5,9,1,8,0,7,0,3,6},
                    {2,0,8,9,3,0,0,0,7},
                    {0,4,0,0,0,0,9,5,0}
                };
                break;
            case 14:
                grid = new int[,]
                {
                    {0,8,0,7,0,6,2,5,3},
                    {0,0,0,0,8,2,7,0,0},
                    {0,3,2,0,0,5,8,0,1},
                    {0,7,3,6,0,4,1,2,9},
                    {0,2,1,8,0,3,5,0,6},
                    {6,0,5,9,2,0,3,7,8},
                    {0,5,4,1,6,0,0,3,7},
                    {3,9,8,5,4,0,6,0,2},
                    {1,0,0,0,3,0,4,0,5}
                };
                break;
            case 15:
                grid = new int[,]
                {
                    {0,8,0,1,2,0,0,9,0},
                    {9,4,0,5,6,7,8,1,0},
                    {7,5,1,3,9,8,0,0,2},
                    {2,6,7,0,1,3,0,8,4},
                    {0,3,9,0,8,5,1,0,0},
                    {8,1,5,7,4,6,2,0,9},
                    {0,0,0,0,3,2,4,0,1},
                    {3,7,0,0,5,1,0,0,6},
                    {1,2,6,0,7,9,3,0,8}
                };
                break;
            case 16:
                grid = new int[,]
                {
                    {6,4,7,9,3,5,1,0,2},
                    {0,5,1,0,4,7,0,0,3},
                    {8,9,3,2,0,0,0,0,0},
                    {0,0,8,0,0,2,3,1,6},
                    {0,1,6,4,0,8,0,9,5},
                    {0,2,9,6,1,3,8,4,0},
                    {0,8,0,0,5,0,6,3,9},
                    {0,3,4,1,0,6,5,0,8},
                    {7,6,5,0,8,9,0,0,0}
                };
                break;
            case 17:
                grid = new int[,]
                {
                    {9,2,5,3,0,7,1,0,4},
                    {0,0,4,5,0,1,0,2,7},
                    {8,0,7,2,9,0,0,3,6},
                    {0,7,1,0,4,0,0,6,9},
                    {4,3,0,6,5,9,2,7,0},
                    {0,0,6,1,0,3,0,5,0},
                    {7,0,3,0,0,0,6,0,5},
                    {1,5,9,7,3,6,0,4,2},
                    {0,8,2,0,0,5,7,0,3}
                };
                break;
            case 18:
                grid = new int[,]
                {
                    {7,0,2,9,0,4,8,6,5},
                    {5,9,1,7,6,8,2,4,0},
                    {6,4,8,0,0,5,1,7,9},
                    {0,2,0,0,9,3,5,1,7},
                    {3,6,0,1,0,7,0,0,0},
                    {1,0,5,4,0,0,0,0,6},
                    {0,5,7,0,4,6,9,0,0},
                    {0,8,0,0,7,1,0,5,4},
                    {4,1,6,5,0,0,0,0,2}
                };
                break;
            case 19:
                grid = new int[,]
                {
                    {4,9,0,8,7,2,1,0,3},
                    {2,0,0,6,0,1,0,5,4},
                    {3,0,0,4,0,0,7,8,2},
                    {9,5,0,2,0,7,8,0,6},
                    {0,2,6,0,4,9,5,7,0},
                    {1,4,7,5,8,0,3,0,9},
                    {5,0,0,0,6,3,0,0,0},
                    {7,8,9,1,2,4,6,0,0},
                    {6,0,0,9,5,0,4,1,0}
                };
                break;
            case 20:
                grid = new int[,]
                {
                    {9,0,0,0,6,2,8,1,5},
                    {0,0,7,9,4,0,2,0,0},
                    {0,2,0,1,8,0,4,7,0},
                    {6,5,9,3,0,4,0,2,8},
                    {4,8,1,5,0,6,9,0,7},
                    {0,0,2,8,9,1,0,0,4},
                    {7,6,4,2,5,8,3,9,1},
                    {0,0,5,0,1,9,7,0,0},
                    {0,0,8,0,3,7,5,0,0}
                };
                break;
            default:
                Debug.LogError("Invalid grid number!");
                return null;
        }

        int rows = grid.GetLength(0);
        int cols = grid.GetLength(1);
        int[,] reversedGrid = new int[rows, cols];
        for (int i = 0; i < rows; i++)
        {
            for (int j = 0; j < cols; j++)
            {
                reversedGrid[i, j] = grid[rows - 1 - i, j];
            }
        }

        return reversedGrid;
        // PrintGrid(grid);
    }
}
